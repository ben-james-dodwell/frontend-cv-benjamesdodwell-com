name: 'Deploy'

on:
  workflow_dispatch:
  push:
    branches: [ "master" ]

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: 'Deploy'
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        shell: bash

    steps:
    - name: Configure aws credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::231055119230:role/GitHubActionsTerraformRole
        aws-region: eu-west-2

    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.8.2

    - name: Terraform Init
      working-directory: ./terraform
      run: terraform init -input=false

    - name: Terraform Plan
      working-directory: ./terraform
      run: terraform plan -out=tfplan -input=false

    - name: Terraform Apply
      working-directory: ./terraform
      run: terraform apply -auto-approve -input=false tfplan

    - name: Terraform Output
      id: tfoutput
      working-directory: ./terraform
      run: terraform output -raw cf_id

    - name: Create CloudFront Cache Invalidation
      run: aws cloudfront create-invalidation --distribution-id ${{ steps.tfoutput.outputs.stdout }} --paths '/*'

        


